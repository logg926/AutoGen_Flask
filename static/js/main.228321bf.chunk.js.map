{"version":3,"sources":["component/UploadPage.js","component/SimpleSlider.js","component/TabContainer.js","component/EditPage.js","component/Paper.js","component/ConfirmPage.js","component/Window.js","component/App.js","component/serviceWorker.js","index.js"],"names":["UploadPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputEvent","e","datae","FormData","append","target","files","theLink","link","theURL","fetch","method","body","then","response","json","myJson","url","setId","id","change","finishLoading","setNewId","newid","catch","error","console","log","changeValue","bind","assertThisInitialized","react_default","a","createElement","className","accept","multiple","type","onInput","htmlFor","Button_default","component","variant","color","React","Component","SimpleSlider","state","value","classes","root","Typography_default","text","Slider_default","container","slider","aria-labelledby","onChange","setter","onDragEnd","onDragStop","min","max","withStyles","width","padding","TabContainer","style","children","EditPage","exportPhoto","setExportCode","hashedid","setFinishExporting","setExporting","contrast_setter","event","setState","contrast","brightness_setter","brightness","threshold_setter","threshold","handleContrastChange","updatephoto","_this2","toString","setFinishLoading","setLoading","_this3","component_TabContainer","src","Date","getTime","alt","component_SimpleSlider","onClick","theme","objectSpread","mixins","gutters","paddingTop","spacing","unit","paddingBottom","Paper_default","elevation","header","ConfirmPage","component_Paper","exportCode","Window","handleChange","changeURL","modifyLoading","exporting","startLoading","AppBar_default","Tabs_default","indicatorColor","Tab_default","label","disabled","src_component_UploadPage","src_component_EditPage","loading","src_component_ConfirmPage","backgroundColor","palette","background","primary","position","height","withTheme","createMuiTheme","typography","useNextVariants","light","main","dark","contrastText","secondary","App","core_styles","src_component_Window","Boolean","window","location","hostname","match","ReactDOM","render","component_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.228321bf.chunk.js","sourcesContent":["//todo: type check\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport './UploadPage.css'\nimport Axios from 'axios';\n\nclass UploadPage extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.inputEvent = this.inputEvent.bind(this);\n      }\n\n    componentDidMount() {\n\n    }\n    inputEvent = (e) => {\n        const datae = new FormData();\n        datae.append('photo',e.target.files[0])\n        // const config = {\n        //     headers: { 'content-type': 'multipart/form-data' }\n        // }\n\n        // const instance = Axios.create();\n        //   Axios.post('http://127.0.0.1:5000/',{data\n        //   }).then(function (response) {\n        //     // handle success\n        //     console.log(response);\n        //   })\n        //   .catch(function (error) {\n        //     // handle error\n        //     console.log(error);\n        //   })\n        let theLink = this.props.link\n        let theURL = \"\"\n        fetch(theLink,{\n            method: \"POST\",\n            body: datae\n        }).then(function(response) {\n            return response.json();\n          })\n          .then((myJson)=> {\n            theURL=theLink+myJson.url\n            this.props.setId(myJson.id)\n            this.props.change(theURL)\n            this.props.finishLoading()\n            this.props.setNewId(myJson.newid)\n            \n          }).catch(function (error) {\n                // handle error\n                console.log(error);\n              })\n              console.log(theURL)\n            this.props.changeValue(1)\n        //     function(res){ return res.json(); })\n        // .then(function(data){ alert( JSON.stringify( data ) ) }).catch(function (error) {\n        //     console.log(error);\n        //   });\n\n        // this.props.change(URL.createObjectURL(e.target.files[0]))\n        \n\n        // this.setState({\n    \n        //   imgsrc: \n        // });\n      }\n\n\n    render(){\n        // const { classes } = this.props;\n        return<div className='button-container'>\n<input\n            accept=\"image/*\"\n            className='input'\n            id=\"flat-button-file\"\n            multiple\n            type=\"file\"\n            onInput={this.inputEvent}\n          />\n          <label htmlFor=\"flat-button-file\">\n          \n<Button component=\"span\" className = 'component-upload-button' variant=\"contained\" color=\"primary\" >Upload</Button>\n        \n</label>\n        </div> \n    }\n}\n\n\n// export default withStyles(styles, { withTheme: true })(UploadPage);\nexport default UploadPage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/lab/Slider';\n// import Slider from 'rc-slider';\n\nconst styles = {\n  root: {\n    width: 'auto',\n  },\n  slider: {\n    padding: '22px 0px',\n  },\n};\n\nclass SimpleSlider extends React.Component {\n  state = {\n    value: 0,\n\n  };\n\n  // handleChange = (event, value) => {\n  //   this.setState({ value });\n  // };\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n    console.log(value)\n\n    return (\n      <div className={classes.root}>\n        <Typography id=\"label\">{this.props.text}</Typography>\n        <Slider\n          classes={{ container: classes.slider }}\n          value={this.props.value}\n          aria-labelledby=\"label\"\n          onChange = {this.props.setter}\n          onDragEnd ={this.props.onDragEnd}\n          onDragStop = {this.props.onDragEnd}\n          min= {this.props.min}\n          max={this.props.max}\n        />\n      </div>\n    );\n  }\n}\n\nSimpleSlider.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleSlider);","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nfunction TabContainer(props) {\n    return (\n      <Typography component=\"div\" style={{ padding: 8 * 7 }}>\n        {props.children}\n      </Typography>\n    );\n  }\n\nexport default TabContainer\n","import React from 'react';\nimport SimpleSlider from './SimpleSlider';\nimport './EditPage.css';\nimport Button from '@material-ui/core/Button'\nimport TabContainer from './TabContainer'\nconst optionsForChange = ['Contrast', 'Brightness','Threshold']\n\n\n\nclass EditPage extends React.Component {\n\n\n  constructor(props){\n    super(props)\n    this.state = {\n      contrast: 0,\n      brightness: 0,\n      threshold: 0 \n    };\n    this.contrast_setter=this.contrast_setter.bind(this)\n    this.threshold_setter=this.threshold_setter.bind(this)\n    this.brightness_setter=this.brightness_setter.bind(this)\n    this.updatephoto=this.updatephoto.bind(this)\n    this.exportPhoto= this.exportPhoto.bind(this)\n  }\n\n  exportPhoto=(e)=>{\n  // fetch newid\n  const datae = new FormData();\n  datae.append('newid', this.props.newid)\n  let theLink = this.props.link+'/'+this.props.id\n  let theURL = \"\"\n  fetch(theLink,{\n    method: \"POST\",\n    body: datae\n}).then(function(response) {\n    return response.json();\n  })\n  .then((myJson)=> {\n    this.props.setExportCode(myJson.hashedid)\n    this.props.setFinishExporting()\n  }).catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      this.props.setExporting()\nthis.props.changeValue(2)\n\n}\n    contrast_setter=(event,value)=>{\n      this.setState({\n        contrast: value\n      })\n      // this.updatephoto()\n    }\n    brightness_setter=(event,value)=>{\n      this.setState({\n        brightness: value\n      })\n      // this.updatephoto()\n\n    }\n    threshold_setter=(event,value)=>{\n      this.setState({\n        threshold: value\n      })\n      // this.updatephoto()\n    }\n\n    updatephoto(){\n      const datae = new FormData();\n\n      console.log(this.state.contrast)\n\n        datae.append('contrast', this.state.contrast.toString())\n        datae.append('brightness', this.state.brightness.toString())\n        datae.append('threshold', this.state.threshold.toString())\n      let theLink = this.props.link+'/'+this.props.id\n      let theURL = \"\"\n      fetch(theLink,{\n        method: \"PATCH\",\n        body: datae\n    }).then(function(response) {\n        return response.json();\n      })\n      .then((myJson)=> {\n        theURL=this.props.link+myJson.url\n        this.props.change(theURL)\n        this.props.setNewId(myJson.newid)\n        this.props.setFinishLoading()\n      }).catch(function (error) {\n            // handle error\n            console.log(error);\n          })\n          console.log(theURL)\n          this.props.setLoading()\n    }\n    \n      handleContrastChange = (event, contrast) => {\n        this.setState({ contrast });\n      };\n\n      \n    render(){\n        return <TabContainer><div className=\"slider-container\">\n        \n\n        {/* <img key={(new Date()).getTime()} source={{ uri: this.props.loading?\"https://via.placeholder.com/150\":this.props.url+'?time'+(new Date()).getTime(), headers: {Pragma: 'no-cache' } }} />\n        <img className='img'src={this.props.loading?\"https://via.placeholder.com/150\":this.props.url, headers: {Pragma: 'no-cache' }} alt=\"modified\"></img> */}\n        {/* <img className='img'src={this.props.loading?\"https://via.placeholder.com/150\":this.props.url+\"#\"+new Date().getTime()} alt=\"modified\"></img> */}\n        <img className='img'src={this.props.url==\"\"? \"https://via.placeholder.com/150\":this.props.url+\"#\"+new Date().getTime()} alt=\"modified\"></img>\n\n<div className='place-holder'></div>\n<SimpleSlider  min={-100} max={100} text=\"Contrast:\" value={this.state.contrast} setter={this.contrast_setter} onDragEnd={()=>{this.updatephoto()}}/>\n<SimpleSlider  min={-100} max={100} text=\"Brightness:\" value={this.state.brightness} setter={this.brightness_setter}  onDragEnd={()=>{this.updatephoto()}}/>\n<SimpleSlider min={0} max={100} text=\"Threshold:\" value={this.state.threshold} setter={this.threshold_setter} onDragEnd={()=>{this.updatephoto()}}/>\n<Button variant=\"contained\" color=\"primary\" className='button' onClick={this.exportPhoto}>\n  Export to Auto Create\n</Button>\n</div>\n</TabContainer>\n    }\n}\n\n\n\nexport default EditPage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nfunction PaperSheet(props) {\n  const { classes } = props;\n\n  return (\n    <div>\n      <Paper className={classes.root} elevation={1}>\n        <Typography variant=\"h5\" component=\"h3\">\n          {props.header}\n        </Typography>\n        <Typography component=\"p\">\n          {props.children}\n           </Typography>\n      </Paper>\n    </div>\n  );\n}\n\nPaperSheet.propTypes = {\n  classes: PropTypes.object.isRequired,\n  header: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(PaperSheet);","import React, { Component } from 'react'\nimport './ConfirmPage.css'\nimport Paper from './Paper'\nimport TabContainer from './TabContainer'\n\nconst id = 'HY_hihi'\nclass ConfirmPage extends Component {\n  render() {\n    return (\n      <TabContainer>\n      <Paper header=\"Your Program's Id:\" >\n      Please Screen Capture this Confirm Page <br></br>\n      <Paper header={\n          this.props.exportCode\n\n      } />\n      </Paper>\n\n      </TabContainer>\n    )\n  }\n}\n\nexport default ConfirmPage\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport UploadPage from './UploadPage'\nimport EditPage from './EditPage'\nimport ConfirmPage from './ConfirmPage'\nimport \"./Window.css\";\nconst styles = theme => ({\n    root: {\n        backgroundColor: theme.palette.background.primary,\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n    },\n});\n\nconst link = \"http://127.0.0.1:5000\"\n\nclass Window extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            url:'',\n            value: 0,\n            modifyLoading: false,\n            id : '',\n            newid: '',\n            exportCode: \"\",\n            exporting: false\n        }\n        this.changeURL = this.changeURL.bind(this)\n        this.changeValue = this.changeValue.bind(this)\n        this.finishLoading =this.finishLoading.bind(this)\n        this.startLoading = this.startLoading.bind(this)\n      }\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    changeURL =(url)=>{\n        this.setState({url})\n        console.log(url)\n    }\n\n    changeValue(value){\n        this.setState({value,modifyLoading: true})\n\n    }\n    startLoading(){\n\n        this.setState({modifyLoading: true})\n    }\n    finishLoading(){\n\n        this.setState({modifyLoading: false})\n    }\n    \n\n    render() {\n        //   console.log(this.props.theme);\n        const { classes} = this.props;\n        const{value}= this.state;\n\n        \n\n        return (\n            <div className={classes.root}>\n                <AppBar >\n                    <Tabs\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        variant=\"fullWidth\"\n                        indicatorColor=\"secondary\"\n                    >\n                        <Tab label=\"Upload\" />\n                        <Tab label=\"Modify\" disabled={!this.state.url} />\n                        <Tab label=\"Export\" disabled={!this.state.url||!this.state.newid}/>\n                        \n                    </Tabs>\n                </AppBar>\n                {/* <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={this.state.value}\n                    onChangeIndex={this.handleChangeIndex}\n                    style={viewstyle}\n                    containerStyle={viewstyle}\n                > */}\n                    {/* <TabContainer dir={theme.direction}> */}\n                    <div className='theview'>\n                {value === 0 && <UploadPage \n                    setId = {(id)=>{\n                        this.setState({id})\n                    }}\n                    link={link}\n                    changeValue={this.changeValue} \n                    change={this.changeURL} \n                    finishLoading={this.finishLoading}\n                    setNewId = {(newid)=>{this.setState({newid:newid})}}\n                />}\n               \n                {value === 1 && <EditPage \n                    id={this.state.id}\n                    setLoading={this.startLoading} \n                    setFinishLoading={this.finishLoading} \n                    link={link} \n                    url={this.state.url} \n                    change={this.changeURL} \n                    loading={this.state.modifyLoading} \n                    setNewId = {(newid)=>{this.setState({newid:newid})}}\n                    newid = {this.state.newid}\n                    setExportCode= {(hashedid)=>{this.setState({exportCode:hashedid})}}\n                    changeValue={(value)=>{this.setState({value})}} \n                    setExporting={()=>{this.setState({exporting: true})}}\n                    setFinishExporting={()=>{this.setState({exporting: false})}}\n                />}\n                {value === 2 && <ConfirmPage link={link} exportCode ={this.state.exportCode}/>}\n                </div>\n                    \n                    \n{/*                     \n                </SwipeableViews> */}\n            </div>\n        );\n    }\n}\n\nWindow.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Window);","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Window from './Window'\n// import blue from '@material-ui/core/colors/purple';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: { \n      primary: {\n        light: '#5e91f2',\n        main: '#1564bf',\n        dark: '#003b8e',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#62727b',\n        main: '#37474f',\n        dark: '#102027',\n        contrastText: '#fff',\n      },\n  typography: { useNextVariants: true },\n},\n});\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Window/>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport * as serviceWorker from './component/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}